var searchIndex = JSON.parse('{\
"argon2_creds":{"doc":"Argon2-Creds provides abstractions over credential …","t":[0,0,3,3,4,3,3,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,6,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["config","errors","Config","ConfigBuilder","ConfigBuilderError","PasswordPolicy","PasswordPolicyBuilder","PasswordPolicyBuilderError","UninitializedField","UninitializedField","ValidationError","ValidationError","argon2","blacklist","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","email","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","init","into","into","into","into","into","into","max","min","password","password_policy","profanity","salt_length","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","username","username_case_mapped","verify","vzip","vzip","vzip","vzip","vzip","vzip","Argon2Error","BlacklistError","CredsError","CredsResult","NotAnEmail","PasswordTooLong","PasswordTooShort","ProfainityError","UsernameCaseMappedError","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","from","into","ne","source","to_owned","to_string","try_from","try_into","type_id","vzip"],"q":["argon2_creds","","argon2_creds::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","argon2_creds::errors","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Credential processor and configuration","Result and error datatypes","Credential management configuration","Builder for <code>Config</code>.","Error type for ConfigBuilder","","Builder for <code>PasswordPolicy</code>.","Error type for PasswordPolicyBuilder","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","See [argon2 config][argon2::Config]","activates blacklist filter. Default <code>true</code>","","","","","","","","","","","","","Builds a new <code>Config</code>.","Builds a new <code>PasswordPolicy</code>.","","","","","","","","","","","","","Checks if input is an email","","","","","","","","","","","","","","","Initialize filters accoding to configuration.","","","","","","","maximum password length(to protect against DoS attacks)","minium password length","Generate hash for passsword","activates profanity filter. Default <code>false</code>","activates profanity filter. Default <code>false</code>","salt length in password hashing","","","","","","","","","","","","","","","","","","","","","","","","","Mormalises, converts to lowercase and applies filters to …","activates username_case_mapped filter. Default <code>true</code>","Verify password against hash","","","","","","","Errors from argon2","when the value passed contains blacklisted words see …","Errors that can occur when processing credentials","","email validation error","password too long","password too short","when the value passed contains profainity","when the value passed contains characters not present in …","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,1,2,3,4,5,4,1,3,2,6,5,4,1,3,2,6,4,3,5,4,3,6,5,4,3,6,5,4,3,6,5,1,1,2,2,5,4,1,1,1,3,2,2,2,6,5,5,4,1,3,2,6,3,3,5,4,4,3,5,4,3,6,1,2,5,4,1,3,2,6,5,4,1,3,2,6,5,4,1,3,2,6,5,4,5,5,4,1,3,2,6,7,7,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["config",3]]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4],["config",3],["configbuildererror",4]]],[[],[["result",4],["passwordpolicy",3],["passwordpolicybuildererror",4]]],[[],["config",3]],[[],["configbuilder",3]],[[],["passwordpolicybuilder",3]],[[],["passwordpolicy",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["credsresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["string",3]]],[[["uninitializedfielderror",3]]],[[]],[[]],[[]],[[["string",3]]],[[["uninitializedfielderror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["str",15]],[["string",3],["credsresult",6]]],[[["passwordpolicy",3]]],[[["bool",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]],[["string",3],["credsresult",6]]],[[["bool",15]]],[[["str",15]],[["bool",15],["credsresult",6]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["credserror",4]],[[]],[[["credserror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["error",4]],["credserror",4]],[[["validationerrors",3]],["credserror",4]],[[]],[[]],[[["credserror",4]],["bool",15]],[[],[["option",4],["error",8]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[4,"ConfigBuilderError"],[4,"PasswordPolicyBuilderError"],[3,"PasswordPolicyBuilder"],[3,"ConfigBuilder"],[3,"Config"],[3,"PasswordPolicy"],[4,"CredsError"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};