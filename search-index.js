var searchIndex = JSON.parse('{\
"argon2_creds":{"doc":"Argon2-Creds provides abstractions over credential …","i":[[0,"config","argon2_creds","Credential processor and configuration",null,null],[3,"Config","argon2_creds::config","Credential management configuration",null,null],[3,"ConfigBuilder","","Builder for <code>Config</code>.",null,null],[11,"profanity","","activates profanity filter. Default <code>false</code>",0,[[]]],[11,"blacklist","","activates blacklist filter. Default <code>true</code>",0,[[]]],[11,"username_case_mapped","","activates username_case_mapped filter. Default <code>true</code>",0,[[]]],[11,"password_policy","","activates profanity filter. Default <code>false</code>",0,[[["passwordpolicy",3]]]],[11,"build","","Builds a new <code>Config</code>.",0,[[],[["string",3],["result",4],["config",3]]]],[3,"PasswordPolicy","","",null,null],[3,"PasswordPolicyBuilder","","Builder for <code>PasswordPolicy</code>.",null,null],[11,"argon2","","See [argon2 config][argon2::Config]",1,[[["config",3]]]],[11,"min","","minium password length",1,[[]]],[11,"max","","maximum password length(to protect against DoS attacks)",1,[[]]],[11,"salt_length","","salt length in password hashing",1,[[]]],[11,"build","","Builds a new <code>PasswordPolicy</code>.",1,[[],[["string",3],["passwordpolicy",3],["result",4]]]],[11,"username","","Mormalises, converts to lowercase and applies filters to …",2,[[],[["credsresult",6],["string",3]]]],[11,"email","","Checks if input is an email",2,[[["option",4]],["credsresult",6]]],[11,"password","","Generate hash for passsword",2,[[],[["credsresult",6],["string",3]]]],[11,"verify","","Verify password against hash",2,[[],["credsresult",6]]],[0,"errors","argon2_creds","Result and error datatypes",null,null],[4,"CredsError","argon2_creds::errors","Errors that can occur when processing credentials",null,null],[13,"ProfainityError","","when the value passed contains profainity",3,null],[13,"UsernameCaseMappedError","","when the value passed contains characters not present in …",3,null],[13,"BlacklistError","","when the value passed contains blacklisted words see …",3,null],[13,"NotAnEmail","","email validation error",3,null],[13,"PasswordTooShort","","password too short",3,null],[13,"PasswordTooLong","","password too long",3,null],[13,"Argon2Error","","Errors from argon2",3,null],[6,"CredsResult","","",null,null],[11,"from","argon2_creds::config","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","argon2_creds::errors","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",3,[[["error",4]],["credserror",4]]],[11,"from","","",3,[[["validationerrors",3]],["credserror",4]]],[11,"clone","argon2_creds::config","",2,[[],["config",3]]],[11,"clone","","",0,[[],["configbuilder",3]]],[11,"clone","","",4,[[],["passwordpolicy",3]]],[11,"clone","","",1,[[],["passwordpolicybuilder",3]]],[11,"clone","argon2_creds::errors","",3,[[],["credserror",4]]],[11,"default","argon2_creds::config","",0,[[],["configbuilder",3]]],[11,"default","","",1,[[],["passwordpolicybuilder",3]]],[11,"default","","",4,[[]]],[11,"default","","",2,[[]]],[11,"eq","argon2_creds::errors","",3,[[["credserror",4]]]],[11,"ne","","",3,[[["credserror",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"source","","",3,[[],[["error",8],["option",4]]]]],"p":[[3,"ConfigBuilder"],[3,"PasswordPolicyBuilder"],[3,"Config"],[4,"CredsError"],[3,"PasswordPolicy"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);